from langchain_groq import ChatGroq
from backend.utils.validation import calculate_retrieval_metrics, calculate_llm_metrics




groq_client = ChatGroq()

async def validate_rag_system(retrieved_docs: List[str], ground_truth_docs: List[str], 
                              generated_answer: str, reference_answer: str) -> Dict[str, Dict[str, float]]:
    """
    Validate the RAG system by calculating retrieval and LLM metrics.

    Args:
        retrieved_docs (List[str]): List of retrieved document URLs.
        ground_truth_docs (List[str]): List of ground truth document URLs.
        generated_answer (str): The answer generated by the LLM.
        reference_answer (str): The reference (ground truth) answer.

    Returns:
        Dict[str, Dict[str, float]]: Dictionary containing retrieval and LLM metrics.
    """
    retrieval_metrics = calculate_retrieval_metrics(retrieved_docs, ground_truth_docs)
    llm_metrics = calculate_llm_metrics(generated_answer, reference_answer)

    return {
        "retrieval_metrics": retrieval_metrics,
        "llm_metrics": llm_metrics
    }